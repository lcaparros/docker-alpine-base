name: Get latest Alpine release version

on:
  schedule:
    - cron:  '0 0 * * 5'
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Fetch release version
        id: fetch_version
        run: |
          echo "OLD_VERSION = $(cat release-versions/alpine-latest.txt)"
          curl -s https://registry.hub.docker.com/v2/repositories/library/alpine/tags | \
          jq -r '.results[1].name' > release-versions/alpine-latest.txt
          echo ::set-output name=VERSION::$(cat release-versions/alpine-latest.txt)
      - name: Check for modified files
        id: git_check
        run: echo ::set-output name=MODIFIED::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      - name: Commit latest release version
        if: steps.git_check.outputs.MODIFIED == 'true'
        run: |
          git config --global user.name 'lcaparros'
          git config --global user.email 'secrets.USER_EMAIL'
          git commit -am "Updating version to ${{ steps.fetch_version.outputs.VERSION }}"
          git push
          git tag -a v${{ steps.fetch_version.outputs.VERSION }} -m "Updating version to ${{ steps.fetch_version.outputs.VERSION }}"
          git push origin v${{ steps.fetch_version.outputs.VERSION }}
